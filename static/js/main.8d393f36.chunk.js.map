{"version":3,"sources":["Form.js","Navbar.js","App.js","theme.js","index.js"],"names":["Form","props","useState","title","description","category","proof","date","values","setValues","className","onSubmit","event","preventDefault","addToChain","for","type","name","value","onChange","target","required","id","placeholder","uploadFile","onClick","generateHash","Hash","useStyles","makeStyles","theme","appBar","backgroundColor","logo","textDecoration","color","fontWeight","fontFamily","Navbar","classes","isLoggedIn","setLoginStatus","newEntry","setNewEntry","Box","sx","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","mr","Typography","variant","component","Button","style","right","display","client","create","hero","backgroundImage","height","backgroundPosition","backgroundRepeat","backgroundSize","blogsContainer","paddingTop","spacing","blogTitle","textAlign","padding","fontSize","paddingBottom","card","maxWidth","boxShadow","media","cardActions","margin","justifyContent","commentBox","flexDirection","commentBody","commentTitle","isolation","author","paginationContainer","clickableIcon","background","borderRadius","likes","alignItems","like","p","h","chip","marginRight","marginLeft","row","rowLeft","leftTitle","tagLine","footerDiv","modal_style","top","left","transform","width","bgcolor","border","overflowY","App","account","setAccount","setLoading","posts","setPosts","whistleBlower","setWhistleBlower","postsCount","setpostsCount","modals","setModals","useEffect","a","window","ethereum","web3","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","console","log","net","getId","networkId","networkData","WhistleBlower","networks","Contract","abi","address","methods","postCount","call","count","vector","vm","i","post","push","postId","loadWeb3","loadBlockchainData","file","updateFile","updateHash","add","added","path","handleModalClick","updatedList","map","modal","gg","Number","e","files","postDetails","uploadPost","send","from","on","hash","location","reload","rowRight","src","Container","Grid","container","key","item","xs","sm","md","Card","CardHeader","action","postTitle","subheader","moment","unix","uploadTime","format","CardActionArea","CardMedia","image","postHash","backgoundImage","CardContent","gutterBottom","Chip","label","postCategory","postDescription","Modal","open","onClose","onError","onerror","mt","CardActions","upvotes","postUpvoted","val","downvotes","postDownvoted","Link","to","ml","my","Pagination","marginTop","float","positon","createMuiTheme","palette","primary","main","default","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.8d393f36.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./form.css\";\r\n\r\nfunction Form(props) {\r\n  const [values, setValues] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    category: \"\",\r\n    proof: \"\",\r\n    date: \"\",\r\n  });\r\n\r\n  const handleTitleChange = (event) => {\r\n    setValues({ ...values, title: event.target.value });\r\n  };\r\n  const handleDescChange = (event) => {\r\n    setValues({ ...values, description: event.target.value });\r\n  };\r\n  const handleCategoryChange = (event) => {\r\n    setValues({ ...values, category: event.target.value });\r\n  };\r\n  const handleProofChange = (event) => {\r\n    //console.log(event.target.files);\r\n    setValues({ ...values, proof: event.target.value });\r\n    props.uploadFile(event);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <form\r\n        className=\"form-content\"\r\n        onSubmit={(event) => {\r\n          event.preventDefault();\r\n          props.addToChain({\r\n            title: values.title,\r\n            category: values.category,\r\n            description: values.description,\r\n          });\r\n        }}\r\n      >\r\n        <h3>Create your Entry</h3>\r\n        <div className=\"formDiv\">\r\n          {/****************************FORM LEFT**********************/}\r\n          <div className=\"form-left\">\r\n            <div className=\"inputField\">\r\n              <label for=\"title\">Title</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                value={values.title}\r\n                onChange={handleTitleChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"inputField\">\r\n              <textarea\r\n                id=\"desc\"\r\n                placeholder=\"Add description\"\r\n                value={values.description}\r\n                onChange={handleDescChange}\r\n                required\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n\r\n          {/********************** FORM RIGHT ************************/}\r\n          <div className=\"form-right\">\r\n            <div className=\"inputField\">\r\n              <label for=\"category\">Category</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"category\"\r\n                value={values.category}\r\n                onChange={handleCategoryChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"inputField\">\r\n              <label for=\"proof\">Proof</label>\r\n              <input\r\n                type=\"file\"\r\n                name=\"proof\"\r\n                value={values.proof}\r\n                onChange={handleProofChange}\r\n              />\r\n            </div>\r\n            <div className=\"inputField\">\r\n              <button\r\n                onClick={(event) => {\r\n                  event.preventDefault();\r\n                  props.generateHash();\r\n                }}\r\n              >\r\n                Generate IPFS\r\n              </button>\r\n              <input\r\n                type=\"text\"\r\n                value={`https://ipfs.infura.io/ipfs/${props.Hash}`}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/************************** Buttons**********************/}\r\n        <div className=\"form-buttons\">\r\n          <button id=\"submit\" type=\"submit\">\r\n            Publish\r\n          </button>\r\n          <button id=\"cancel\" type=\"reset\">\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Form from \"./Form\";\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    backgroundColor: \"#fff\",\n  },\n  logo: {\n    textDecoration: \"none\",\n    color: \"#0072E5\",\n    fontWeight: \"bold\",\n    fontFamily: \"Monoton, cursive\",\n  },\n}));\n\nfunction Navbar(props) {\n  const classes = useStyles();\n  var [isLoggedIn, setLoginStatus] = useState(false);\n  var [newEntry, setNewEntry] = useState(false);\n  return (\n    <div>\n      <div className=\"App\">\n        <Box sx={{ flexGrow: 1 }}>\n          <AppBar className={classes.appBar} position=\"static\">\n            <Toolbar>\n              <IconButton\n                size=\"large\"\n                edge=\"start\"\n                color=\"primary\"\n                aria-label=\"menu\"\n                sx={{ mr: 2 }}\n              >\n                <Typography\n                  variant=\"h5\"\n                  color=\"primary\"\n                  component=\"div\"\n                  sx={{ flexGrow: 1 }}\n                >\n                  <div className={classes.logo}>{\"WB\"}</div>\n                </Typography>\n              </IconButton>\n              <Button\n                className=\"newEntry\"\n                color=\"primary\"\n                style={{\n                  position: \"absolute\",\n                  right: \"10%\",\n                  display:\n                    !isLoggedIn || (isLoggedIn && newEntry) ? \"none\" : \"block\",\n                }}\n                onClick={() => {\n                  setNewEntry(true);\n                }}\n              >\n                New Entry\n              </Button>\n              <Button\n                className=\"newEntry\"\n                color=\"primary\"\n                style={{\n                  position: \"absolute\",\n                  right: \"10%\",\n                  display: isLoggedIn && newEntry ? \"block\" : \"none\",\n                }}\n                onClick={() => {\n                  setNewEntry(false);\n                }}\n              >\n                Home\n              </Button>\n              <Button\n                className=\"login\"\n                color=\"primary\"\n                style={{\n                  position: \"absolute\",\n                  right: \"1%\",\n                  display: isLoggedIn ? \"none\" : \"block\",\n                }}\n                onClick={() => {\n                  setLoginStatus(true);\n                }}\n              >\n                Login\n              </Button>\n              <Button\n                className=\"logout\"\n                color=\"primary\"\n                style={{\n                  position: \"absolute\",\n                  right: \"1%\",\n                  display: !isLoggedIn ? \"none\" : \"block\",\n                }}\n                onClick={() => {\n                  setNewEntry(false);\n                  setLoginStatus(false);\n                }}\n              >\n                Logout\n              </Button>\n            </Toolbar>\n          </AppBar>\n        </Box>\n      </div>\n      <div style={{ display: !newEntry ? \"none\" : \"block\" }}>\n        <Form\n          Hash={props.Hash}\n          uploadFile={props.uploadFile}\n          generateHash={props.generateHash}\n          addToChain={props.addToChain}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Link from \"@material-ui/core/Link\";\nimport Button from \"@material-ui/core/Button\";\n\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\nimport { Comment } from \"semantic-ui-react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Modal from \"@material-ui/core/Modal\";\n\nimport Navbar from \"./Navbar\";\n\nimport Form from \"./Form\";\nimport Web3 from \"web3\";\nimport WhistleBlower from \"./contract/whistleBlower.json\";\nimport moment from \"moment\";\n\nimport { create } from \"ipfs-http-client\";\nconst client = create(\"https://ipfs.infura.io:5001/api/v0\");\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    backgroundColor: \"#fff\",\n  },\n  hero: {\n    backgroundImage: ` url('https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fwallpapercave.com%2Fwp%2FlKeljXZ.jpg&f=1&nofb=1')`,\n    height: \"100%\",\n    backgroundPosition: \"center\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    position: \"relative\",\n    // display: \"flex\",\n    // justifyContent: \"center\",\n    // alignItems: \"center\",\n    // color: \"#fff\",\n    // fontSize: \"4rem\",\n    // [theme.breakpoints.down(\"sm\")]: {\n    //   height: 300,\n    //   fontSize: \"3em\",\n    // },\n  },\n  blogsContainer: {\n    paddingTop: theme.spacing(3),\n  },\n  blogTitle: {\n    fontWeight: 600,\n    textAlign: \"center\",\n    padding: \"40px\",\n    fontSize: \"32px\",\n    paddingBottom: theme.spacing(3),\n    fontFamily: \"Montserrat, sans-serif\",\n  },\n\n  card: {\n    maxWidth: \"100%\",\n    boxShadow: \"0 0 1em rgba(0, 0, 0, 0.5)\",\n  },\n  media: {\n    height: 240,\n  },\n  cardActions: {\n    display: \"flex\",\n    margin: \"0 10px\",\n    justifyContent: \"space-between\",\n  },\n  commentBox: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    margin: \"0 10px\",\n  },\n  commentBody: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    margin: \"0 5px\",\n    fontSize: \"0.75em\",\n  },\n  commentTitle: {\n    color: \"blue\",\n    isolation: \"isolate\",\n  },\n  author: {\n    display: \"flex\",\n  },\n  paginationContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  clickableIcon: {\n    color: \"#0072E5\",\n    isolation: \"isolate\",\n    \"&:hover\": {\n      color: \"#43a1ff\",\n      background: \"transparent\",\n      padding: \"3px\",\n      borderRadius: \"50%\",\n      isolation: \"isolate\",\n    },\n  },\n  likes: {\n    display: \"flex\",\n    alignItems: \"flex-end\",\n  },\n  like: {\n    color: \"#0072E5\",\n    isolation: \"isolate\",\n    margin: \"0 5px\",\n  },\n  p: {\n    color: \"darkGray\",\n  },\n  h: {\n    color: \"rgb(95, 95, 95)\",\n  },\n  chip: {\n    marginRight: \"2.5px\",\n    marginLeft: \"2.5px\",\n  },\n  row: {\n    maxWidth: \"1140px\",\n    margin: \"0 auto\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  rowLeft: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    color: \"#fff\",\n  },\n  leftTitle: {\n    fontSize: \"4rem\",\n    fontFamily: \"Roboto, sans-serif\",\n  },\n  tagLine: {\n    fontSize: \"2.5rem\",\n    fontWeight: \"400\",\n    fontFamily: \"Montserrat, sans-serif\",\n  },\n  footerDiv: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n}));\n\nconst modal_style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n  borderRadius: \"10px\",\n  overflowY: \"initial\",\n  height: \"80vh\",\n  overflowY: \"auto\",\n};\n\nfunction App() {\n  const classes = useStyles();\n\n  const [isLoggedIn, setLoginStatus] = useState(false);\n  const [newEntry, setNewEntry] = useState(false);\n  //useStates for intergration purpose\n  const [account, setAccount] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [whistleBlower, setWhistleBlower] = useState(null);\n  const [postsCount, setpostsCount] = useState(0);\n\n  //useStates for Modal purpose\n  // const [open, setOpen] = useState(false);\n  // const handleOpen = () => setOpen(true);\n  // const handleClose = () => setOpen(false);\n  const [modals, setModals] = useState([]);\n\n  useEffect(() => {\n    async function loadWeb3() {\n      //Setting up Web3\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n      } else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider);\n      } else {\n        window.alert(\n          \"1.Non-Ethereum browser detected. You should consider trying MetaMask!\"\n        );\n      }\n    }\n    async function loadBlockchainData() {\n      //Declare Web3\n      const web3 = window.web3;\n      //console.log(web3);\n\n      //Load account\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n\n      setAccount(accounts[0]);\n\n      //Network ID\n      const networkId = await web3.eth.net.getId();\n      const networkData = WhistleBlower.networks[networkId];\n\n      if (networkData) {\n        // Assign contract\n        const whistleBlower = new web3.eth.Contract(\n          WhistleBlower.abi,\n          networkData.address\n        );\n        setWhistleBlower(whistleBlower);\n        // Get post count\n        const count = await whistleBlower.methods.postCount().call();\n        setpostsCount(count);\n        // Load files&sort by the newest\n        var vector = [];\n        var vm = [];\n        //for (var i = count; i >=1; i--) {\n        for (var i = count - 1; i >= 0; i--) {\n          const post = await whistleBlower.methods.posts(i).call();\n          vector.push(post);\n          vm.push({ id: post.postId, value: 0 });\n        }\n        setPosts(vector);\n        setModals(vm);\n      } else {\n        window.alert(\"In Metamask,Connect to Ropsten Network\");\n      }\n      setLoading(false);\n    }\n\n    loadWeb3();\n    loadBlockchainData();\n  }, [postsCount]);\n\n  const [file, updateFile] = useState(null);\n  const [Hash, updateHash] = useState(``);\n\n  /**********UPLOADING FILE***********************************************/\n  function uploadFile(e) {\n    console.log(e.target.files[0]);\n    updateFile(e.target.files[0]);\n  }\n  /******************** GENERATE HASH*************************************/\n  async function generateHash() {\n    try {\n      const added = await client.add(file);\n      // const url = `https://ipfs.infura.io/ipfs/${added.path}`;\n      // console.log(url);\n      updateHash(added.path);\n    } catch (error) {\n      console.log(\"Error uploading file: \", error);\n    }\n  }\n  /*********************ADDING TO BLOCKCHAIN**********************************/\n  function addToChain(postDetails) {\n    //loading true\n    setLoading(true);\n    //method call\n    whistleBlower.methods\n      .uploadPost(\n        Hash,\n        postDetails.title,\n        postDetails.category,\n        postDetails.description\n      )\n      .send({ from: account })\n      .on(\"transactionHash\", (hash) => {\n        setLoading(false);\n        updateFile(null);\n\n        window.location.reload();\n      })\n      .on(\"error\", (e) => {\n        // window.alert(\"Error\");\n        setLoading(false);\n      });\n    setpostsCount(postsCount + 1);\n  }\n  /********************INCREASE UPVOTES***************************************/\n  function increaseUpvotes(id) {\n    setLoading(true);\n\n    whistleBlower.methods\n      .postUpvoted(id)\n      .send({ from: account })\n      .on(\"transactionHash\", (hash) => {\n        console.log(hash);\n        setLoading(false);\n        // loop over the files and find the provided id.\n        let updatedList = posts.map((post) => {\n          if (post.postId == id) {\n            const val = Number(post.upvotes) + 1; //<-------------------PROBLEM------------------------>\n            console.log(\"inside map   \" + val);\n            return { ...post, upvotes: val }; //gets everything that was already in item, and updates \"done\"\n          }\n          return post; // else return unmodified item\n        });\n        setPosts(updatedList); // set state to new object with updated list\n        //window.location.reload()\n      })\n      .on(\"error\", (e) => {\n        //window.alert(\"Error\");\n        setLoading(false);\n      });\n  }\n  /********************DECREASE UPVOTES***************************************/\n  function increaseDownvotes(id) {\n    setLoading(true);\n\n    whistleBlower.methods\n      .postDownvoted(id)\n      .send({ from: account })\n      .on(\"transactionHash\", (hash) => {\n        console.log(hash);\n        setLoading(false);\n        // loop over the files and find the provided id.\n        let updatedList = posts.map((post) => {\n          if (post.postId == id) {\n            const val = Number(post.downvotes) + 1; //<-------------------PROBLEM------------------------>\n            console.log(\"inside map   \" + val);\n            return { ...post, downvotes: val }; //gets everything that was already in item, and updates \"done\"\n          }\n          return post; // else return unmodified item\n        });\n        setPosts(updatedList); // set state to new object with updated list\n        //window.location.reload()\n      })\n      .on(\"error\", (e) => {\n        // window.alert(\"Error\");\n        setLoading(false);\n      });\n  }\n  /********************MODAL ONCLICK***************************************/\n  function handleModalClick(id) {\n    let updatedList = modals.map((modal) => {\n      if (modal.id == id) {\n        const gg = Number(modal.value) ^ 1;\n        return { ...modal, value: gg };\n      }\n      return modal;\n    });\n    setModals(updatedList);\n  }\n  return (\n    <div className=\"App\">\n      {/************** Navbar ************************/}\n      <Navbar\n        Hash={Hash}\n        uploadFile={uploadFile}\n        generateHash={generateHash}\n        addToChain={addToChain}\n      />\n\n      <Box className={classes.hero}>\n        <div className={classes.row}>\n          <div className={classes.rowLeft}>\n            <div className={classes.leftTitle}>\n              Welcome to\n              <br />\n              <strong>Whistle Blower!</strong>\n            </div>\n            <div className={classes.tagLine}>Defending facts on the web</div>\n          </div>\n          <div className={classes.rowRight}>\n            <img\n              src=\"https://media.discordapp.net/attachments/919450418499710997/921313013997400104/The_7_Elements_of_Art.png\"\n              width={\"100%\"}\n            ></img>\n          </div>\n        </div>\n      </Box>\n\n      <Container\n        maxWidth=\"lg\"\n        className={classes.blogsContainer}\n        // style={{ display: newEntry ? \"none\" : \"block\" }}\n      >\n        <Typography variant=\"h5\" className={classes.blogTitle}>\n          <h2>Explore</h2>\n        </Typography>\n\n        <Grid container spacing={5}>\n          {posts.map((post, key) => {\n            return (\n              <Grid item xs={12} sm={6} md={4} key={key}>\n                <Card className={classes.card}>\n                  <CardHeader\n                    action={<IconButton aria-label=\"settings\"></IconButton>}\n                    title={post.postTitle}\n                    subheader={moment\n                      .unix(post.uploadTime)\n                      .format(\"h:mm:ss A M/D/Y\")}\n                  />\n\n                  <CardActionArea onClick={() => handleModalClick(post.postId)}>\n                    <CardMedia\n                      className={classes.media}\n                      image={`https://ipfs.infura.io/ipfs/${post.postHash}`}\n                      title=\"Contemplative Reptile\"\n                      style={{\n                        backgoundImage:\n                          'url(\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png\")',\n                      }}\n                    />\n                    <CardContent>\n                      <Typography\n                        gutterBottom\n                        variant=\"h5\"\n                        component=\"h2\"\n                        className={classes.h}\n                      >\n                        <Chip\n                          label={post.postCategory}\n                          color=\"success\"\n                          className={classes.chip}\n                        />\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                        className={classes.p}\n                      >\n                        {post.postDescription}\n                      </Typography>\n                    </CardContent>\n                  </CardActionArea>\n                  {console.log(\"Modals\", modals)}\n                  <Modal\n                    open={\n                      typeof modals[key] === \"undefined\"\n                        ? false\n                        : modals[key].value\n                    }\n                    onClose={() => handleModalClick(post.postId)}\n                    aria-labelledby=\"modal-modal-title\"\n                    aria-describedby=\"modal-modal-description\"\n                  >\n                    <Box sx={modal_style}>\n                      <Typography\n                        id=\"modal-modal-title\"\n                        variant=\"h6\"\n                        component=\"h2\"\n                      >\n                        <h3 style={{ textAlign: \"center\" }}>\n                          {post.postTitle}\n                        </h3>\n                      </Typography>\n                      {/* <img src = {`https://ipfs.infura.io/ipfs/${post.postHash}`}  width=\"400px\"/> */}\n                      <img\n                        src={`https://ipfs.infura.io/ipfs/${post.postHash}`}\n                        onError={(e) => {\n                          e.target.onerror = null;\n                          e.target.src =\n                            \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png\";\n                        }}\n                        width=\"400px\"\n                      />\n                      <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        {post.postDescription}\n                      </Typography>\n                    </Box>\n                  </Modal>\n\n                  <CardActions className={classes.cardActions}>\n                    <div className={classes.likes}>\n                      <span className={classes.like}>{post.upvotes}</span>\n                      <ThumbUpIcon\n                        className={classes.clickableIcon}\n                        onClick={() => increaseUpvotes(post.postId)}\n                      />\n                    </div>\n\n                    <div className={classes.likes}>\n                      <span className={classes.like}>{post.downvotes}</span>\n                      <ThumbDownIcon\n                        className={classes.clickableIcon}\n                        onClick={() => increaseDownvotes(post.postId)}\n                      />\n                    </div>\n                    {/********************* Comments *************************/}\n                    <div className={classes.likes}>\n                      <span className={classes.like}>{0}</span>\n                      {console.log(post)}\n                      <Link\n                        className={classes.commentTitle}\n                        to={`/whistleblowerUI/comments/1`}\n                        props={1}\n                      >\n                        <CommentIcon\n                          className={classes.clickableIcon}\n                          onClick={() => alert(\"comments\")}\n                        />\n                      </Link>\n                    </div>\n\n                    <Box className={classes.author}>\n                      <Box ml={2}></Box>\n                    </Box>\n                    <Box>\n                      <ShareIcon\n                        onClick={() => alert(\"Share\")}\n                        className={classes.clickableIcon}\n                      />\n                    </Box>\n                  </CardActions>\n                </Card>\n              </Grid>\n            );\n          })}\n        </Grid>\n\n        <Box my={4} className={classes.paginationContainer}>\n          <Pagination count={10} />\n        </Box>\n      </Container>\n\n      <Box\n        style={{\n          backgroundColor: \"#0072E5\",\n          color: \"white\",\n          marginTop: \"30px\",\n          float: \"bottom\",\n          positon: \"sticky\",\n        }}\n      >\n        <Container\n          maxWidth=\"lg\"\n          style={{ paddingBottom: \"30px\", paddingTop: \"30px\" }}\n        >\n          <div className={classes.footerDiv}>\n            <div>\n              <img\n                src=\"https://cdn.discordapp.com/attachments/919450418499710997/921367864852766740/NFT_team_Logo_500_x_300_px.png\"\n                width=\"200px\"\n              ></img>\n            </div>\n            <div>Copyright © NonFungibleTeam 2021-22</div>\n            <div\n              style={{\n                fontSize: \"15px\",\n                paddingBottom: \"10px\",\n                marginTop: \"10px\",\n                textAlign: \"center\",\n              }}\n            >\n              <YouTubeIcon\n                className={classes.clickableIcon}\n                style={{\n                  marginRight: \"10px\",\n                  marginLeft: \"10px\",\n                  color: \"white\",\n                }}\n                onClick={() =>\n                  window.open(\n                    \"https://www.youtube.com/channel/UCTF80cOCjQcEDvV4QIQeEQA\",\n                    \"_blank\"\n                  )\n                }\n              />\n              <GitHubIcon\n                className={classes.clickableIcon}\n                style={{\n                  marginRight: \"10px\",\n                  marginLeft: \"10px\",\n                  color: \"white\",\n                }}\n                onClick={() =>\n                  window.open(\n                    \"https://github.com/darshana-v/WhistleBlower\",\n                    \"_blank\"\n                  )\n                }\n              />\n            </div>\n          </div>\n        </Container>\n      </Box>\n    </div>\n  );\n}\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#0072E5\",\n    },\n  },\n  background: {\n    default: \"#fff\",\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}